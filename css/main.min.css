@font-face{font-family:"icon";src:url(../fonts/icons/icons.eot?81yhxa);src:url(../fonts/icons/icons.eot?81yhxa#iefix) format("embedded-opentype"),url(../fonts/icons/icons.ttf?81yhxa) format("truetype"),url(../fonts/icons/icons.woff?81yhxa) format("woff"),url(../fonts/icons/icons.svg?81yhxa#icomoon) format("svg");font-weight:400;font-style:normal;font-display:block}[class*=" _icon-"],[class^=_icon-]{font-family:"icon"!important;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}._icon-code:before{content:"\e900"}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}aside,footer,header,nav,section{display:block}body,html{height:100%;min-width:320px}html{font-size:16px}body{line-height:1;font-family:"Roboto";-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%;color:#40464d}button,input,textarea{font:inherit "Roboto"}input::-ms-clear{display:none}button{background:inherit;cursor:pointer}button::-moz-focus-inner{padding:0;border:0}a,a:hover,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top}h1,h2,h3,h4,h5,h6{font-weight:inherit;font-size:inherit}.wrapper,body._lock{overflow:hidden}.wrapper{width:100%;min-height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:40px;background:-o-radial-gradient(50% 50%,50% 50%,#d6e9ff 60%,#f0f7ff 100%),#fff;background:radial-gradient(50% 50% at 50% 50%,#d6e9ff 60%,#f0f7ff 100%),#fff;position:relative}._container{max-width:1170px;margin:0 auto}.main{width:460px;max-width:100%}.main__header{padding-bottom:25px}.main__body{background:#fff;padding:20px 40px;-webkit-box-shadow:-10px -10px 20px rgba(255,255,255,.4),10px 10px 30px rgba(124,170,224,.2);box-shadow:-10px -10px 20px rgba(255,255,255,.4),10px 10px 30px rgba(124,170,224,.2);border-radius:10px}.title{font-size:40px;font-weight:700;line-height:1.5em}.subtitle{color:rgba(64,70,77,.4)}.link{color:#40464d;-webkit-transition:color .2s;-o-transition:color .2s;transition:color .2s}.link:hover{color:#3391ff}.list__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:20px 0;border-bottom:1px solid rgba(64,70,77,.1)}.list__item:last-child{border-bottom:none}.list__info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:64px}.list__name{font-size:18px}.list__code{color:rgba(64,70,77,.4);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;line-height:1em}.list__code i{margin-right:5px;font-size:20px}.list__illustration{width:80px;height:64px;margin-left:auto;border:1px solid rgba(214,233,255,.8);border-radius:4px;overflow:hidden;cursor:-webkit-zoom-in;cursor:zoom-in}.list__image,.preview img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.list__row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-top:20px}.list__row>:not(:last-child){margin-right:20px}.preview{width:600px;max-width:100%;height:auto;-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s;position:absolute}@media (max-width:1182px){._container{max-width:970px}}@media (max-width:991.98px){._container{max-width:750px}}@media (max-width:767.98px){._container{max-width:none;padding:0 10px}}@media screen and (max-width:420px){.list__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.list__illustration{margin-left:0;margin-top:20px;width:100%;height:auto}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */